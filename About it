用C语言编写一个高校信息系统。
每个学生的基本信息（每个为一个字段）包括：学号、姓名、性别、国别、出生年月、民族、婚姻状况、政治面貌、身份证号、学生类别、入学年月、入学方式、学院、专业、学制、培养层次、年级、班级号、辅导员等。
这些信息可以按你自己认为合理的方式存放到不同的数据文件里，例如：民族表，政治面貌表，学院、专业、学制、培养层次表，等等。基础较好的学生可以自学数据库有关范式部分的内容，以便更为合理地设计数据文件。大家可以合理地假定用福州大学作为应用背景。
1、学号：字符串类型，9位数字，学院编码（2位）+入学年份（2位）+数字编码（5位），形如：221500555。学号为唯一码，即不允许重复，也不允许为空，输入后学号不允许修改，如果学号输入错误只能删除这个学生的所有信息，然后重新输入该学生的所有信息。学院编码必须在学院（编码、名称对照）表(或存放该信息的表)存在，如：福大没有学院编码为55的学院，所以输入55xxxxxxx必须报告错误。数据录入时如果入学年份和系统当前（日期）的年份不一致（可以合理认为学生一入学就录入数据），则必须给出警告，是否允许录入该学生的数据由编程者自己决定。数字编码（5位）一般为顺序码，很多学院还会按专业方向和/或班级等进行编号，但想进行统一的、较为完善的检验比较难，可以自己考虑怎么进行数据的准确性和合理性检验。
2、姓名：形如：刘国庆，2～20个汉字（中国人），其他人：不超过40个字符。必须进行必要的数据检验，否则姓名为“abc”照样可以录入。
3、性别：男/女（只能选择二者之一）。
4、国别：中国/美国/...可枚举值，必须用一个（文本）文件保存所有的“国家名称”，然后让用户选择（不能直接输入）。默认值：中国（即，用户不输入或选择而直接按<回车>默认输入/选择“中国”）。如果该字段直接让用户输入，将会可能出现“中国”、“中 国”、“中华人民共和国”等同一个国家的不同名称，以后将无法进行统计等处理。如果不用文件保存所有的“国家名称”，则只能将所有的“国家名称”写到程序（的数组）里面，这样做有2个问题，其一：程序将变得非常大；其二：更严重的是如果某个国家分裂或被合并，就必须修改程序，这显然是极不合理的。
5、出生日期：形如：1997.05.19，限制入学时10<=年龄<=100，当然毫无疑问的日期还必须是合法的日期。
6、民族：汉族/回族/...可枚举值（有对应的国家标准GB），必须用一个文件保存所有的“民族名称”，然后让用户选择（不能直接输入）。默认值：汉族。
7、婚姻状况：未婚(1)、已婚(2)、丧偶(3)、离婚(4)、其他(9)，可枚举值，让用户选择（不能直接输入，否则可能用户会将“离婚”输入为“离异”等）。默认值：未婚。将所有“可枚举值”用文件保存或直接写在数组里面由编程者自己决定。也可以将几个取值较少的字段合并为一个类似配置文件的方式存放。
8、政治面貌：共青团员/群众/...可枚举值，必须用一个文件保存所有的“政治面貌”，然后让用户选择（不能直接输入）。默认值：共青团员。
9、身份证号：对“国别”非“中国”的学生可以为空。18位：前17位都是数字，最后一位为0～9或X，行政区划（6位）+出生日期（8位）+顺序码（3位）+校验码（1位），“顺序码”为偶数代表女性，为奇数代表男性，形如：350103199705191114。必须检查“行政区划”是否合法，“出生日期”是否和前面的“出生日期”一致，“顺序码”是否和前面的“性别”匹配，“校验码”（是根据前面十七位数字码，按照ISO 7064:1983.MOD 11-2校验码计算出来的检验码）是否正确等。身份证号不能重复（即：不能有2个学生有同样的身份证号）。
10、学生类别：城镇应届/农村应届/...可枚举值，必须用一个文件保存所有的“学生类别”，然后让用户选择（不能直接输入）。默认值：无。
11、入学年月：形如：2015.09.07，如果其年份值和“学号”的“入学年份”不一致，必须给出警告(是否允许其录入由编程者自己决定)，8=<月份<=10，当然也必须判断是否是合法日期。
12、入学方式：普通入学/自主招生/专项生/...可枚举值，必须用一个文件保存所有的“入学方式”，然后让用户选择（不能直接输入）。默认值：普通入学。
13、学院名称：软件学院/数学与计算机科学学院/...可枚举值，必须用一个文件保存所有的“学院名称”，然后让用户选择（不能直接输入）。默认值：无。必须和“学号”的“学院编码”的学院不一致。
14、专业名称：软件工程/计算机科学与应用/...可枚举值，必须用一个文件保存所有的“学院名称/专业名称对照表”，然后让用户选择（不能直接输入）。默认值：无。
15、年级：形如：2015，如果和“学号”的“入学年份”不一致，必须给出警告(允许其录入)，默认值：2000+“学号”的“入学年份”。
16、学制：默认值：4年，必须和“专业名称”对应的“学制”一致。
17、培养层次：默认值：本科，必须和“专业名称”对应的“培养层次”一致。
18、班级号：字符类型，形如：01，取值范围：01～10。
19、辅导员：形如：林红霞。应该用一个文件来保存辅导员信息，否则会出现同一个班级的学生会有不同的辅导员。

学生信息管理系统开发的各种（功能、非功能）需求：
1、所有配套的文件，如：“国家名称”、“民族名称”等可以用单独的文本文件保存，因为这些文件的修改较少，所以对这些文件不需要提供相应的程序进行增（加）、删（除）、（修）改、查（询）等维护，让管理员直接用记事本等编辑器打开文件修改即可，数据的完整性、正确性等由管理员自己保证。
2、信息管理系统应该具有的功能：
1）学生信息可以从键盘直接录入，也可以从数据文件（文件的格式自己确定）读入。
2）对所有数据必须进行非常完善的正确性、完整性、一致性等等检验。如：性别只能是“男”和“女”；“身份证”必须合法；“学号”必须符合格式规定并且唯一；同一个学院的一个专业名称必须一致；同一个班级的“辅导员”必须是一个人等。主要目的是让大家知道，编写能处理合法输入数据的程序远远不够，甚至可能程序量只占不多的部分，很多程序在于处理非法的输入并给出恰当的错误报告。测试数据必须包含一条是自己的真实信息。
3）对学生的信息进行各种（增、删、改、查）维护后，允许再次保存（至文件）。
4）查询：可以按学号、姓名、入学年月、学院、专业、年级、班级号、辅导员，等进行单独或组合查询。
5）删除：可以（查询后）删除单个学生，也可以整个“专业+年级”一起删除（后者必须再次确认，并且要限制为已经毕业10年的学生，实际使用的系统可能不允许删除）。
6）统计、分析：可以按“专业+年级+性别”、“国别”、“民族”等进行各种自己认为合理的统计、分析（输出格式自己决定）。
7）排序：可以按“学号”或“年龄”等用户合理要求的方式进行排序。
8）按合理的格式输出学生的部分或全部信息。
9）其他学生自己认为合理的功能或非功能（需求）。
3、学生可以自己增加其他合理的学生信息，如：姓名拼音、曾用名、考生号、高考成绩情况（总分和单科的成绩）、出生地、生源地、血型、授予学位、家庭地址、家庭联系人信息、主要社会关系、个人简历等。
4、学生的信息在文件内部如何存储由学生自己确定。如：性别，有的学生可能存为0和1，或者存放F/M，或者直接存男/女，当然无论如何存储，最后让使用者看到的只能是男和女。
5、其他要求：必须设计一个简单、美观的字符菜单，合理划分函数，必须在合适的地方显示版权信息（参照前一道题），程序必须经过完整的测试(各种合法或非法的数据，有一定量的测试数据)，有良好的编程风格(命名、注解、缩进排列等)，必须遵循你自己的编程风格（约定），否则判断为抄袭，评为0分。要求写序言性注解，内容包括：个人信息(班级、学号、姓名、电话、邮件地址等)、描述程序中采用的主要算法和数据结构、开发环境和运行环境、输入限制和输出说明、参考文献、版权、其他需说明的问题等等。
6、实现步骤：先完成数据的键盘录入功能(不进行数据完整性检验，不写入文件)；实现简单的输出功能(一开始只输出信息，不考虑美观，然后慢慢调整，方便后面的程序调试)；完成文件读入和写文件功能；逐一编写题目要求的各功能(每增加一项功能就进行相应的测试)。
本程序还属于第一个版本，部分信息操作不完整。
后面加以改进。
